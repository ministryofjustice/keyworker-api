defaults: &defaults
  working_directory: ~/app

version: 2
jobs:
  build:
    <<: *defaults
    docker:
      - image: circleci/openjdk:11-jdk-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle" }}
            - gradle-
      - run: ./gradlew build
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle" }}
      - store_test_results:
          path: build/test-results
      - store_artifacts:
          path: build/reports/tests
      - persist_to_workspace:
          root: .
          paths:
            - build/libs
            - build.gradle

  build_docker:
    <<: *defaults
    docker:
      - image: circleci/node:8.11.1-browsers
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - setup_remote_docker
      - run:
          name: Build container and publish to docker hub
          command: |
            jar xvf build/libs/keyworker-api-*.jar BOOT-INF/classes/META-INF/build-info.properties
            API_VERSION=$(grep 'build.version=' BOOT-INF/classes/META-INF/build-info.properties | awk -F= '{print $2}')
            rm BOOT-INF/classes/META-INF/build-info.properties

            # make up a good version name
            TAG=${API_VERSION}.${CIRCLE_BRANCH}
            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              TAG=${API_VERSION}
            fi

            # build the container
            docker build --rm=false . \
               --tag "mojdigitalstudio/keyworker-api:$TAG" \
               --label "maintainer=michael.willis@digital.justice.gov.uk" \
               --label "app.version=$TAG" \
               --label "build.version=$TAG" \
               --label "build.number=$CIRCLE_BUILD_NUM" \
               --label "build.url=$CIRCLE_BUILD_URL" \
               --label "build.gitref=$CIRCLE_SHA1"

            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              # publish to docker hub as the tag
              docker login -u $DOCKER_USER -p $DOCKER_PASS
              docker push mojdigitalstudio/keyworker-api:$TAG
              docker tag mojdigitalstudio/keyworker-api:$TAG mojdigitalstudio/keyworker-api:latest
              docker push mojdigitalstudio/keyworker-api:latest
            fi

            # generate Dockerrun manifest
            node scripts/plant-beanstalk.js $TAG
      - persist_to_workspace:
          root: .
          paths:
            - Dockerrun.aws.json

  deploy_release:
      working_directory: ~/app
      docker:
        - image: mojdigitalstudio/circleci-node-awsebcli
      steps:
        - checkout
        - attach_workspace:
            at: ~/app
        - deploy:
            name: Deploy to Elastic Beanstalk Dev
            command: |
              VERSION=$(egrep keyworker-api Dockerrun.aws.json | awk -F"\"" '{print $4}' |  awk -F":" '{print $2}')
              ~/.local/bin/eb deploy --process --verbose --label ${VERSION}

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - build_docker:
          requires:
            - build
      - deploy_release:
          requires:
            - build_docker
          filters:
            branches:
              only: master
