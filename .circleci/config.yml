defaults: &defaults
  working_directory: ~/app

version: 2
jobs:
  build:
    <<: *defaults
    docker:
      - image: circleci/openjdk:8-jdk-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "build.gradle" }}
            - gradle-
      - run: ./gradlew build
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "build.gradle" }}
      - store_test_results:
          path: build/test-results
      - store_test_results:
          path: target/site
      - store_artifacts:
          path: build/reports/tests
      - store_artifacts:
          path: target/site
      - persist_to_workspace:
          root: .
          paths:
            - build/libs
            - build.gradle

  build_docker:
    <<: *defaults
    docker:
      - image: circleci/node:8.11.1-browsers
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - setup_remote_docker
      - run:
          name: Build container and publish to docker hub
          command: |
            jar xvf build/libs/keyworker-service-*.jar META-INF/build-info.properties
            API_VERSION=$(grep 'build.version=' META-INF/build-info.properties | awk -F= '{print $2}')
            rm META-INF/build-info.properties

            # make up a good version name
            TAG=${API_VERSION}.${CIRCLE_BRANCH}
            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              TAG=KEYWORKER_SERVICE_${API_VERSION}
            fi

            # build the container
            docker build --rm=false . \
               --tag "mojdigitalstudio/keyworker-service:$TAG" \
               --label "maintainer=michael.willis@digital.justice.gov.uk" \
               --label "app.version=$TAG" \
               --label "build.version=$TAG" \
               --label "build.number=$CIRCLE_BUILD_NUM" \
               --label "build.url=$CIRCLE_BUILD_URL" \
               --label "build.gitref=$CIRCLE_SHA1"

            # publish to docker hub as the tag
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push mojdigitalstudio/keyworker-service:$TAG

            # if master, also publish to latest and git
            if [[ "${CIRCLE_BRANCH}" == "master" ]]; then
              docker tag mojdigitalstudio/keyworker-service:$TAG mojdigitalstudio/keyworker-service:latest
              docker push mojdigitalstudio/keyworker-service:latest
              git tag $TAG
              git push --tags
            fi

            # generate Dockerrun manifest
            node scripts/plant-beanstalk.js $TAG
      - persist_to_workspace:
          root: .
          paths:
            - Dockerrun.aws.json

  deploy_release:
    <<: *defaults
    docker:
      - image: circleci/python:latest-browsers
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - deploy:
          name: Install elastic beanstalk CLI
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              sudo apt-get install python-pip python-dev
              pip install --user 'six>-1.9.0' awsebcli --ignore-installed
            fi
      - deploy:
          name: Deploy to Elastic Beanstalk Dev
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              ~/.local/bin/eb deploy --process --verbose
            fi

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - build_docker:
          requires:
            - build
      - deploy_release:
          requires:
            - build_docker
          filters:
            branches:
              only: master
